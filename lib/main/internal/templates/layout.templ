package templates

templ header(title string) {
	<head>
		<title>{ title }</title>
		<meta charset="UTF-8"/>
		<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://unpkg.com/htmx.org@1.9.10"></script>

		<link rel="stylesheet" href="static/css/style.css" />
    <script type="text/javascript">
      window.onload = function () {
      var conn;
      var msg = document.getElementById("msg");
      var log = document.getElementById("log");
      let conn_open = false;

      function appendLog(item) {
          var doScroll = log.scrollTop > log.scrollHeight - log.clientHeight - 1;
          log.appendChild(item);
          if (doScroll) {
              log.scrollTop = log.scrollHeight - log.clientHeight;
          }
      }

      document.getElementById("form").onsubmit = function () {
          if (!conn) {
              return false;
          }
          if (!msg.value) { 
              return false;
          }
          conn.send(msg.value);
          msg.value = "";
          return false;
      };

      function createConnection() {
        conn = new WebSocket("ws://" + document.location.host + "/ws");
        conn.onclose = function (evt) {
          var item = document.createElement("div");
          item.innerHTML = "<b>Connection closed.</b>";
          appendLog(item);
          conn_open = false;
        };
        conn.onmessage = function (evt) {
          var messages = evt.data.split('\n');
          for (var i = 0; i < messages.length; i++) {
            var item = document.createElement("div");
            item.innerText = messages[i];
            appendLog(item);
          }
        };
      }

      var nCounter = 0;

      // Set up event handler to produce text for the window focus event
      window.addEventListener("focus", function(event) 
          { 
            document.getElementById('message').innerHTML = "window has focus " + nCounter; 
            nCounter = nCounter + 1; 

            if(conn_open === false) {
              console.log("test")
              if (window["WebSocket"]) {
                conn_open = true;
                createConnection()
              } else {
                var item = document.createElement("div");
                item.innerHTML = "<b>Your browser does not support WebSockets.</b>";
                appendLog(item);
              }

            }
          }, false);

          document.getElementById("close", function() {
            if (window["WebSocket"]) {
              conn.close();
            }
          });

          createConnection()
      };
    </script>

	</head>
}

templ footer() {
	<footer class="p-4"> footer</footer>
}

templ nav(){
	<nav class="p-4 flex gap-2">
    Navbar
	</nav>
}

templ Layout(contents templ.Component) {
  @header("Title")
	<body class="flex flex-col h-full bg-stone-900 text-white">
    // @nav()
    <main class="p-4 flex-1">
      @contents
      <div id="message"></div>
      // <button id="close">Close connection</button>
    </main>
    @footer()
	</body>
}
